{"version":3,"sources":["api.ts","pages/HomePage.tsx","pages/LoginPage.tsx","pages/EventListPage.tsx","pages/EventPage.tsx","App.tsx","index.tsx"],"names":["fetcher","fetch","then","res","json","useAuthStatus","useSWR","HomePage","authStatus","data","loggedInEmail","email","Container","Jumbotron","to","LoginPage","history","useHistory","form","useForm","mutate","loggedIn","Row","Col","Form","onSubmit","handleSubmit","console","log","method","headers","alert","message","push","Button","variant","type","body","JSON","stringify","login","register","Group","controlId","Label","Control","ref","name","placeholder","value","EventListContainer","styled","div","EventRow","li","CreateEventFormContainer","EventListPage","events","totalCount","values","map","e","key","id","Date","startTimestamp","toISOString","endTimestamp","location","xs","submitCallback","description","startDatetime","endDatetime","parsedStartDatetime","parseDate","parsedEndDatetime","createEvent","getTime","reset","EventCreationForm","EventInfo","p","EventDescription","EventPage","event_id","useParams","event","useEventRegistrations","registrations","startDate","endDate","joined","find","r","toDateString","toTimeString","length","reg","onClick","registerEvent","unregisterEvent","AppContainer","App","className","Navbar","bg","Nav","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3c9aa5cc.chunk.js","sourcesContent":["import useSWR from \"swr\"\nimport {responseInterface} from \"swr/dist/types\";\n\n// @ts-ignore\nconst fetcher = (...args) => fetch(...args).then(res => res.json())\n\nexport interface Error {\n    message: string\n}\n\nexport interface UserStatus {\n    email?: string;\n    loggedIn: boolean;\n}\n\nexport interface Event {\n    id?: string;\n    name: string;\n    location: string;\n    description: string;\n    startTimestamp: number;\n    endTimestamp: number;\n}\n\nexport interface EventList {\n    totalCount: number;\n    values: Event[];\n}\n\nexport interface Registration {\n    email: string\n}\n\nexport function logout() : Promise<UserStatus | Error> {\n    console.log(\"log out\")\n    return fetch('/api/auth/logout', {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n    }).then(res => res.json())\n}\n\nexport function login(data: {email: string, password: string}) : Promise<UserStatus | Error> {\n    return fetch('/api/auth/login', {\n        method: 'POST', // or 'PUT'\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n    }).then(res => res.json())\n}\n\nexport function register(data: {email: string, password: string}) : Promise<UserStatus | Error> {\n    return fetch('/api/auth/register', {\n        method: 'POST', // or 'PUT'\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n    }).then(res => res.json())\n}\n\n\nexport function createEvent(data: Event) : Promise<Event | Error> {\n    return fetch('/api/events', {\n        method: 'POST', // or 'PUT'\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n    }).then(res => res.json())\n}\n\nexport function registerEvent(event_id: string) : Promise<Event | Error> {\n    return fetch(`/api/event/${event_id}/registrations`, {\n        method: 'PUT',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n    }).then(res => res.json())\n}\n\nexport function unregisterEvent(event_id: string) : Promise<Event | Error> {\n    return fetch(`/api/event/${event_id}/registrations`, {\n        method: 'DELETE',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n    }).then(res => res.json())\n}\n\n// Hooks API\n\nexport function useEvents() : responseInterface<EventList, any> {\n    return useSWR('/api/events', fetcher)\n}\n\nexport function useEvent(id: string) : responseInterface<Event, any> {\n    return useSWR(`/api/event/${id}`, fetcher)\n}\n\nexport function useEventRegistrations(id: string) : responseInterface<Registration[], any> {\n    return useSWR(`/api/event/${id}/registrations`, fetcher)\n}\n\nexport function useAuthStatus() : responseInterface<UserStatus, any> {\n    return useSWR('/api/auth/status', fetcher)\n}","import React from \"react\";\nimport {Container, Jumbotron} from \"react-bootstrap\";\nimport {useAuthStatus} from \"../api\";\nimport {Link} from \"react-router-dom\";\n\n\nexport const HomePage = () => {\n    const { data: authStatus } = useAuthStatus()\n    const loggedInEmail = authStatus && authStatus.email;\n\n    return <Container>\n        <Jumbotron>\n            Welcome,\n            { loggedInEmail ?\n                <p>You are currently logged in as <b>{loggedInEmail}</b></p>:\n                <p>First, please <Link to=\"/login\">login or register</Link></p>\n            }\n\n            <ul>\n                <li>Go to <Link to=\"/events\">Events</Link> tab to see available events, or create a new one</li>\n                <li>Click on an event to see the event details and register for the event</li>\n            </ul>\n\n        </Jumbotron>\n    </Container>\n}","import React from \"react\";\nimport {Button, Form, Container, Row, Col} from \"react-bootstrap\";\nimport useSWR from \"swr\";\nimport {useForm} from \"react-hook-form\";\nimport {register, login, logout, useAuthStatus, UserStatus} from \"../api\";\nimport { useHistory } from \"react-router-dom\";\n\nexport const LoginPage = () => {\n    const history = useHistory();\n    const form = useForm();\n    const { data: authStatus, mutate } = useAuthStatus()\n\n    const tryLogin = (data: any) => {\n        return login(data).then(res => {\n            if ('loggedIn' in res && res.loggedIn) {\n                return history.push(\"/\");\n            }\n\n            return register(data).then((res) => {\n                if ('loggedIn' in res && res.loggedIn) {\n                    return history.push(\"/\");\n                }\n\n                if ('message' in res) {\n                    return alert(res.message)\n                }\n            })\n        });\n    }\n\n    const tryLogout = () => {\n        return logout().then(res => {\n            if ('message' in res) {\n                return alert(res.message)\n            }\n\n            return history.push(\"/\");\n        })\n    }\n\n\n\n    if (authStatus && authStatus.loggedIn) {\n        return <div>\n            <Container>\n                <Row>\n                    <Col>\n                        <p>You are currently logged in as <b>{authStatus.email}</b></p>\n                        <Form onSubmit={form.handleSubmit(tryLogout)}>\n                            <Button variant=\"danger\" type=\"submit\">\n                                Logout\n                            </Button>\n                        </Form>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    }\n    \n    return <div>\n        <Container>\n            <Row>\n                <Col>\n                    <Form onSubmit={form.handleSubmit(tryLogin)}>\n                        <Form.Group controlId=\"formBasicEmail\">\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control ref={form.register} name=\"email\" type=\"email\" placeholder=\"Enter email\" />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formBasicPassword\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control ref={form.register} name=\"password\" type=\"password\" placeholder=\"Password\" />\n                        </Form.Group>\n                        <Button variant=\"primary\" type=\"submit\" value=\"login\">\n                            Login / Register\n                        </Button>\n                    </Form>\n                </Col>\n            </Row>\n        </Container>\n    </div>\n}\n\nfunction LogoutPage(loggedInEmail: string, logoutCallback: () => {}) {\n\n    const onSubmit = () => {\n\n    }\n\n\n\n}","import React from \"react\";\nimport {Button, Col, Container, Form, Row} from \"react-bootstrap\";\nimport {createEvent, login, register, useAuthStatus, useEvents, UserStatus} from \"../api\";\nimport {useForm} from \"react-hook-form\";\nimport styled from \"styled-components\";\n\nimport {parseDate} from \"chrono-node\";\nimport {Link} from \"react-router-dom\";\n\nconst EventListContainer = styled.div`\n    ul {\n        padding: 0;\n    }\n`;\n\nconst EventRow = styled.li`\n    list-style: none;\n    margin: 10px 0;\n\n    a {\n        display: block;\n        padding: 10px 10px;\n        color:#212529;\n        text-style: none;\n        text-decoration: none;\n        \n        :hover {\n            background-color: #eee;\n        }\n    }\n    \n    p {\n        margin: 0;\n        font-style: italic;\n    }\n    \n    label {\n        margin: 0;\n        display: inline-block;\n        width: 70px;\n        font-style: normal;\n    }\n`;\n\nconst CreateEventFormContainer = styled.div`\n  border: solid 1px #ccc;\n  padding: 1em;\n`;\n\nexport const EventListPage = () => {\n    const form = useForm();\n    const {data: events, mutate} = useEvents();\n    const {data: authStatus} = useAuthStatus();\n    if (!events) {\n        return null;\n    }\n\n    return <div>\n        <Container>\n            <Row>\n                <Col>\n                    <EventListContainer>\n                        <h2>Events ({events.totalCount})</h2>\n                        <ul>\n                            {events.values.map(e => {\n                                return <EventRow key={e.id}>\n                                    <Link to={ \"/event/\" + e.id }>\n                                        <h3>{e.name}</h3>\n                                        <p><label>Start:</label> {new Date(e.startTimestamp).toISOString()}</p>\n                                        <p><label>End:</label> {new Date(e.endTimestamp).toISOString()}</p>\n                                        <p><label>Location:</label> {e.location}</p>\n                                    </Link>\n                                </EventRow>\n                            })}\n                        </ul>\n\n                    </EventListContainer>\n                </Col>\n\n                <Col xs={4}>\n                    <CreateEventFormContainer>\n                        {EventCreationForm(form, authStatus, () => mutate())}\n                    </CreateEventFormContainer>\n                </Col>\n            </Row>\n        </Container>\n    </div>\n}\n\nfunction EventCreationForm(\n    form: any,\n    authStatus: UserStatus | undefined,\n    submitCallback: () => {},\n) {\n    if (!authStatus || !authStatus.loggedIn) {\n        return <p>Please log in to create an event.</p>\n    }\n\n    const onSubmit = (data: any) => {\n        const {name, location, description, startDatetime, endDatetime} = data;\n\n        const parsedStartDatetime = parseDate(startDatetime);\n        if (!parsedStartDatetime) {\n            return alert(\"Invalid input start date\");\n        }\n\n        const parsedEndDatetime = parseDate(endDatetime);\n        if (!parsedEndDatetime) {\n            return alert(\"Invalid input end date\");\n        }\n\n        const startTimestamp = parsedStartDatetime.getTime();\n        const endTimestamp = parsedEndDatetime.getTime();\n        return createEvent({name, description, location, startTimestamp, endTimestamp}).then(res => {\n            if ('message' in res) {\n                return alert(res.message)\n            }\n\n            form.reset()\n            submitCallback();\n        });\n    }\n\n    return <div>\n        <h3>Create Event</h3>\n        <Form onSubmit={form.handleSubmit(onSubmit)}>\n            <Form.Group>\n                <Form.Label>Name</Form.Label>\n                <Form.Control ref={form.register} name=\"name\" type=\"text\"/>\n            </Form.Group>\n\n            <Form.Group>\n                <Form.Label>Location</Form.Label>\n                <Form.Control ref={form.register} name=\"location\" type=\"text\"/>\n            </Form.Group>\n\n            <Form.Group>\n                <Form.Label>Description</Form.Label>\n                <Form.Control ref={form.register} name=\"description\" type=\"textarea\"/>\n            </Form.Group>\n\n            <Form.Group>\n                <Form.Label>Start Date/Time</Form.Label>\n                <Form.Control ref={form.register} name=\"startDatetime\" type=\"text\"\n                              placeholder=\"e.g. Today, Tomorrow, next Friday\" />\n            </Form.Group>\n\n            <Form.Group>\n                <Form.Label>End Date/Time</Form.Label>\n                <Form.Control ref={form.register} name=\"endDatetime\" type=\"text\"\n                              placeholder=\"e.g. Today, Tomorrow, next Friday\" />\n            </Form.Group>\n\n            <Button variant=\"primary\" type=\"submit\">\n                Create\n            </Button>\n        </Form>\n    </div>\n}\n\n","\nimport React from \"react\";\nimport {Col, Container, Row, Form, Button} from \"react-bootstrap\";\nimport {Link, useParams} from \"react-router-dom\";\nimport {registerEvent, unregisterEvent, useAuthStatus, useEvent, useEventRegistrations} from \"../api\";\nimport styled from \"styled-components\";\n\n\nconst EventInfo = styled.p`\n    margin: 10px 0;\n    label {\n        margin: 0;\n        margin-right: 5px;\n        display: inline-block;\n        width: 80px;\n        text-align: right;\n    }\n`;\n\nconst EventDescription = styled.p`\n    margin: 30px 0;\n    \n`;\n\n\nexport const EventPage = () => {\n    const { id: event_id } = useParams();\n    const {data: authStatus} = useAuthStatus();\n    const {data: event} = useEvent(event_id);\n    const {data: registrations, mutate} = useEventRegistrations(event_id);\n    if (!event) {\n        return <div>Fail loading event...</div>\n    }\n\n    const startDate = new Date(event.startTimestamp);\n    const endDate = new Date(event.endTimestamp);\n\n    const loggedIn = authStatus && authStatus.loggedIn;\n    const joined = authStatus && registrations &&\n        registrations.find(r => r.email == authStatus.email);\n\n    return <Container>\n        <Row>\n            <Col>\n                <h1>{event.name}</h1>\n                <EventInfo>\n                    <label>Location:</label>{event.location}\n                </EventInfo>\n\n                <EventInfo>\n                    <label>Start:</label>\n                    <span>{startDate.toDateString()}</span>\n                    <span>{startDate.toTimeString()}</span>\n                </EventInfo>\n                <EventInfo>\n                    <label>End:</label>\n                    <span>{endDate.toDateString()}</span>\n                    <span>{endDate.toTimeString()}</span>\n                </EventInfo>\n\n                <EventDescription>{event.description}</EventDescription>\n\n                <h4>Attendances ({registrations?.length})</h4>\n                <ul>\n                    {registrations?.map(reg => {\n                        return <li key={reg.email}>{reg.email}</li>\n                    })}\n                </ul>\n\n                { !loggedIn &&\n                <p>Please log in to register.</p>\n                }\n\n                { loggedIn && !joined &&\n                <Button variant=\"primary\" onClick={() => registerEvent(event_id).then(() => mutate())}>Join</Button>\n                }\n\n                { loggedIn && joined &&\n                <Button variant=\"danger\" onClick={() => unregisterEvent(event_id).then(() => mutate())}>Cancel Registration</Button>\n                }\n\n\n\n            </Col>\n        </Row>\n    </Container>\n\n}","import React from 'react';\nimport {BrowserRouter as Router, Switch, Route, Link} from \"react-router-dom\";\n\nimport './App.scss';\nimport {HomePage} from \"./pages/HomePage\"\nimport {LoginPage} from \"./pages/LoginPage\";\nimport {EventListPage} from \"./pages/EventListPage\";\nimport {Nav, Navbar, Container} from \"react-bootstrap\";\nimport styled from \"styled-components\";\nimport {EventPage} from \"./pages/EventPage\";\nimport {useAuthStatus} from \"./api\";\n\n\nconst AppContainer = styled.div`\n  padding: 4em 0em;\n`;\n\nfunction App() {\n    const { data: authStatus } = useAuthStatus()\n\n    return (\n        <div className=\"App\">\n            <Router>\n                <Navbar bg=\"light\" variant=\"light\">\n                    <Nav className=\"mr-auto\">\n                        <Link className=\"nav-link\" to=\"/\">Home</Link>\n                        <Link className=\"nav-link\" to=\"/events\">Events</Link>\n                    </Nav>\n\n                    <Nav>\n                        <Link className=\"nav-link\" to=\"/login\">{\n                            (authStatus && authStatus.loggedIn) ? \"Logout\" : \"Login\"\n                        }</Link>\n                    </Nav>\n                </Navbar>\n\n                <AppContainer>\n                    <Switch>\n                        <Route path=\"/login\">\n                            <LoginPage />\n                        </Route>\n                        <Route path=\"/event/:id\">\n                            <EventPage />\n                        </Route>\n                        <Route path=\"/events\">\n                            <EventListPage />\n                        </Route>\n                        <Route path=\"/\">\n                            <HomePage />\n                        </Route>\n                    </Switch>\n                </AppContainer>\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}